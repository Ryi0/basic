@import url('https://fonts.googleapis.com/css2?family=Josefin+Sans:ital,wght@0,100..700;1,100..700&display=swap');
@import "variables";

$base-blur: 5px;
$blur:100px;
$NavHeight: 10vh;
$HrHeight:0.5vh;
@mixin ContainerBackgroundMixin{
  @each $K, $V in $containerBackground{
    #{$K}:$V;
  }
}

@function addBlur($value, $inc){
  @return calc(#{$value} + #{$inc});
}
:root{
  color: $text;
  font-family: "Josefin Sans", sans-serif;
  font-optical-sizing: auto;
  font-style: normal;
  background: rgb(24,28,28);
  height: 100%;
  overflow-x: hidden;
  font-size: 16pt;
}
// section body
body{
  text-align: center;
  justify-content: center;
}

main{
  margin-top: $NavHeight;
  margin-left: 1vw;
  margin-right: 1vw;
  padding: .1vh 1em;
  flex: 1 1 auto;
 // background: linear-gradient(0deg, rgba(24, 28, 28, 1) 0%, rgba(53, 63, 68, 0.63) 100%) no-repeat;
}

/**
  Replicates glass.
 */
.glass{
 // mask: linear-gradient(to bottom, black 25% 70%, transparent 100%);
  margin: 0;
  backdrop-filter: blur($base-blur+15px) saturate(4) brightness(.5);
  width: 100%;
  height: 1vh;
}

// section app-navbar
app-navbar{
/**
  This positions itself outside the liner div amd outside the navContainer div and serves as an intermediate
  between the content and the navbar.
  The padding is what is used to size the div
 */

  /**
This contains the navContainer and
To see what exactly it contains, uncomment *101
 */
  .liner{
    display: flex;
    flex-direction: row;
   //@include ContainerBackgroundMixin; //*101
    top:0vh;
    padding: 0;
    position: relative; //this makes the glass div appear under the navbar.
    left: 0;
    width: 100vw;
    height: $NavHeight;
    margin: 0;

  }


  /* This can be set on the ::before pseudo of the element it is applied to. */
  .navContainer::before {
   // background: rgba(0, 0, 0, 0.34);
    content: '';
    /* This layer is positioned between some element and its background. */
    position: absolute;
    /* This should not affect the contents of the container. */
    z-index: -1;
    /* The blur size should be anything below `0` so it will extend to the outside. */
    inset: $NavHeight - (($NavHeight + $HrHeight)  * 1.325);
    //mask:   linear-gradient(to top, transparent 0%, black 25% 75%, transparent 100%),linear-gradient(to left, transparent 0%, black 25% 75%, transparent 100%);
    mask: linear-gradient(to bottom, black 95%, transparent 100%);
    backdrop-filter: blur($base-blur+10) ;
    /* This merges the masks above so only the overlapping pixels are rendered. */
    //mask-composite: intersect;
    /* This creates the illusion of a fade-out mask. */
  }


  nav{
    display: block;
    width: 100%;
    height: 100%;//$NavHeight;//
    margin: 0;
    padding: 0;
  }

  /**
    This is where all the buttons are contained inside of the navbar
   */
  .navContainer{
    background-image: linear-gradient( transparentize($text, .75), transparentize($background, .195));
    //background-blend-mode: hard-light;
    //backdrop-filter: blur(5px);
    height: $NavHeight;
    display: flex;
    flex-direction: row;
    margin: 0;
    padding: 0;
  }



  /**
  The buttons in the navbar are each contained within a tile.
   */
  .tile{
   // float: left;

    border:0;
      //border-top: .1vh solid;
      //border-bottom: .1vh solid;
    flex-grow: 1;
    border-color: black;
    font-size: 1rem;
    padding: 0;
    margin: 0;
    //background: transparentize($background, .75);
    //width: 100%;
   // height: 100%;
  }


}
.clipTest{
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
  height: 30rem;
  width: 20rem;
  position: relative;
}

.clipTest::before{
  content: '';
  $clipSpace: .3rem;
  $calculatedClipSpace: calc(100% - $clipSpace);

  background-color: crimson;
  position: absolute;
  height: 100%;
  width: 100%;

   clip-path: polygon(
       evenodd,
       0% 0%,
       100% 0%,
       100% 100%,
       0% 100%,
       0% 0%,
       $clipSpace $clipSpace,
       $calculatedClipSpace $clipSpace,
       $calculatedClipSpace $calculatedClipSpace,
       $clipSpace $calculatedClipSpace, $clipSpace $clipSpace
  );
}





.burgerMenuButtonWrap{
  display: flex;

 // background: rgb(255, 0, 0);
  margin: 0;
  padding: 0;
  width: 100%;
  height: 100%;

  app-button{

    font-size: 1.25rem;
    .btn{

      color: #444cf7;
      height: 100%;
      //padding-top: 100%;
      //padding: .1ch .5ch;
      width: 100%;
    // border: 2px solid red;
    padding: 0;
    }
    width: 100%;
    height: 100%;
   padding: 0;
  //  border: 4px solid springgreen;
  }
}

.burgerMenuButtonWrap::before{ //Custom outline

  $clipSpace: .2rem;
  $calculatedClipSpace: calc(100% - $clipSpace);
  content: '';
  //background-color: rgba(255,255,255,0.01);
  //background-color: crimson;
  position: absolute;
  height: 100%;
  width: 100%;
  backdrop-filter: blur($base-blur + 150);
  clip-path: polygon(
      evenodd,
      0% 0%,
      100% 0%,
      100% 100%,
      0% 100%,
      0% 0%,
      $clipSpace $clipSpace,
      $calculatedClipSpace $clipSpace,
      $calculatedClipSpace $calculatedClipSpace,
      $clipSpace $calculatedClipSpace, $clipSpace $clipSpace
  );
}

.menuOpener{ //why is a button so complicated?
  padding: 0;
  margin: 0;
  width: 2rem;
  height: 2rem;
  position: absolute;
}

//.btn::before{
//  content: '';
//  $clipSpace: .3rem;
//  $calculatedClipSpace: calc(100% - $clipSpace);
//
//  background-color: crimson;
//  position: absolute;
//  height: 20%;
//  width: 10%;
//
//  //clip-path: polygon(
//  //    evenodd,
//  //    0% 0%,
//  //    100% 0%,
//  //    100% 100%,
//  //    0% 100%,
//  //    0% 0%,
//  //    $clipSpace $clipSpace,
//  //    $calculatedClipSpace $clipSpace,
//  //    $calculatedClipSpace $calculatedClipSpace,
//  //    $clipSpace $calculatedClipSpace, $clipSpace $clipSpace
//  //);
//}

// section app-button
app-button{
  font-size: 1.6rem;
  padding: 0;
  margin: 0;
  cursor: pointer;
  .btn {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 100%;
    height: 100%;
    color: $text;
    padding: 0.5rem 1rem;
    border-radius: 0.25rem;
    font-size: 1em;

  }
  .navButton {
    display: flex;
    align-items: center;
    justify-content: center;
    transition: 0.225s ease-in;
    color: $text;
    height: 100%;
    padding: 0 1rem;
    border-radius: 0;

    margin: 0;
    background: linear-gradient(87deg, rgba(0, 0, 0, .01) 0%, transparentize($accent, .675), rgba(0, 0, 0, .01) 100%);
    backdrop-filter: blur($base-blur+10px) brightness(.275) saturate(4.5);
  }

  .navButton:hover{
    backdrop-filter: blur($base-blur+50px) brightness(.525) saturate(4) contrast(1.2);
  }
  .activeRoute{
    font-size: 1.025em;
    transition: 270ms ease-in-out;
    color: transparent;
    backdrop-filter: blur($base-blur+15px) brightness(.7) saturate(5.5) contrast(1.175);
    background-image: linear-gradient($primary, $secondary);
    background-clip: text;
  }

}

/**
  This is the header where the navbar resides. Do not apply too much styling here, try to keep it contained in the navbar
  Uncomment *101 to visualize the container
 */
// section app-header
app-header {
  flex: 0 0 auto;
  .HrWrap{
    //display: inline-block;
    // background: $dar;
    // mix-blend-mode: hard-light;
    backdrop-filter: blur(15px) saturate(5) brightness(.7);
    padding:  $HrHeight 0 0 0; //only change the first value as it belongs to padding top
    position: static;
    width: 100vw;
    margin: 0;
   // top: 100%;
  }

  header {
  //  @include ContainerBackgroundMixin; //*101

    height: auto;
    padding: 0;
    position: fixed;
    left: 0;
    width: 100vw;
    top: 0;
    margin: 0;
  }


}


// section media queries
@media (max-width: 767px) {
  $NavHeight :  $NavHeight*2.25;

  app-navbar {
    //nav{
    //  height: $NavHeight + 1vh;
    //}
    .liner{
      flex-direction: column;
      height: $NavHeight;
    }
    .navContainer {
      flex-direction: column;
      height: $NavHeight; // Allow vertical expansion on mobile
    }
    .tile {
      //flex-grow: 1;
      //width: 100%;
      //height: 100%; // Allow vertical expansion on mobile
      padding-bottom: 0px;
    }
  }

  app-button {
    .navButton {
      font-size: 1.2rem;
      // padding: 0.5rem; // Reduce padding on mobile
      // Reduce font size on mobile
    }
  }
}



